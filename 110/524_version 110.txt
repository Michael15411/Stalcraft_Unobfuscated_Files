#version 110

uniform float time;
uniform float visibility;
uniform float power;

varying vec2 uv;

void main(){
    float ct = cos(time);
    float st = sin(time);

    vec2 c1 = vec2(0.5) + vec2(sin(time * 1.5) + cos(time), cos(time)) * 0.05;
    vec2 c2 = vec2(0.5) + vec2(sin(time * 1.5 + 10.0) + cos(time), sin(time)) * 0.05;
    vec2 c3 = vec2(0.5) + vec2(sin(time * 2.5 + 5.0) + cos(time), sin(time * 2.5 + 10.0)) * 0.05;

    float f = 0.0;
    f += (1.0 - smoothstep(0.0, 0.8, distance(uv * vec2(sin(time) * 0.1 + 1.), c1) / 0.25)) * 0.4 * smoothstep(0.0, 0.5, visibility);
    f += (1.0 - smoothstep(0.0, 0.8, distance(uv, c2) / 0.5))* 0.3  * smoothstep(0.25, 0.75, visibility);
    f += (1.0 - smoothstep(0.0, 0.8, distance(uv, c3) / 0.5)) * 0.3 * smoothstep(0.5, 1.0, visibility);

    f = min(f, 0.75);

    f *= power;

    gl_FragColor = vec4(gl_Color.rgb * f, gl_Color.a * f);
}›9œè