#version 110

uniform sampler2D texture;
uniform float time;
uniform float power;

varying vec2 uv;

#define PI 3.141592

void main(){
    float beatSpeed = 0.20;
    float peak = .7071;
    float veinsPower = max(cos(beatSpeed * time), cos(beatSpeed * time + PI / 2.));
    veinsPower = (max(peak, veinsPower)) / peak;

    vec4 veins = texture2D(texture, uv);
    vec4 color = vec4(vec3(0.), 1. - (veins.r + veins.g + veins.b) / 3.);
    color.rgb = color.a * vec3(0.35, 0.04, 0.04);
    color.a *= 0.8 * (veinsPower);

    float vignetteRadius = 0.;
    float vignetteEdgeWidth = 1.5;

    float ratio = 16. / 9. * 0.8;
    float distance = length((vec2(.5) - uv)) * 2.;
    distance = smoothstep(vignetteRadius, vignetteRadius + vignetteEdgeWidth, distance);
    vec3 vignetteColor = mix(vec3(0.35, 0.04, 0.04), vec3(0.04, 0.35, 0.04), 1. - distance);
    vec4 vignette = vec4(vignetteColor, distance * 0.7);

    color = vec4(color.rgb * color.a + vignette.rgb * (1. - color.a), max(color.a, vignette.a));
    color.a *= power;
    gl_FragColor = color;
}